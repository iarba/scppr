#version 330 core

in vec3 f_pos;
in vec2 f_coord;
in vec3 f_norm;
in vec3 light_pos;

out vec4 color;

uniform sampler2D tex;
uniform vec3 light_color;

void main()
{
  float ambient_strength = 0.15;
  vec3 ambient_light = ambient_strength * light_color;

  vec3 norm = normalize(f_norm);
  vec3 light_dir = normalize(light_pos - f_pos);

  float diffuse_strength = max(dot(norm, light_dir), 0.0);
  vec3 diffuse_light = diffuse_strength * light_color;

  vec3 view_dir = normalize(-f_pos);
  vec3 reflect_dir = reflect(-light_dir, norm);
  float specular_strength = 0.5 * pow(max(dot(view_dir, reflect_dir), 0.0), 32);
  vec3 specular_light = specular_strength * light_color;

  color = vec4(ambient_light + diffuse_light + specular_light, 1) * texture(tex, f_coord);
}
